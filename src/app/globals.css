/* app/globals.css */

/*
 * =================================================================
 * 1. TAILWIND DIRECTIVES (MUST BE FIRST)
 * =================================================================
 */
@tailwind base;
@tailwind components;
@tailwind utilities;
@import url('https://api.fontshare.com/v2/css?f[]=satoshi@700,500,400&display=swap');

/*
 * =================================================================
 * 2. BASE LAYER & THEME VARIABLES
 * =================================================================
 */
@layer base {
  :root {
    --background: 0 0% 100%; /* Default background: white */
    --foreground: 0 0% 3.9%;   /* Default text: almost black */
    /* ... (all other theme variables are correct) ... */
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 0 0% 3.9%; /* Dark mode background: almost black */
    --foreground: 0 0% 98%;   /* Dark mode text: white */
    /* ... (all other dark theme variables are correct) ... */
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
  }

   * {
    @apply border-border;
    cursor: none !important;
  }
.bg-parchment {
  background-image: url('/images/parchment-texture.jpg');
  background-size: cover;
}
  body {
    /* <<< THE FIX: Use theme variables for sitewide consistency */
    @apply bg-background text-foreground;
    font-family: 'Satoshi', sans-serif;

    cursor: none; /* Custom cursor is fine */
  }

  a, button {
    cursor: none;
  }
}

/*
 * =================================================================
 * 3. CUSTOM UTILITIES & ANIMATIONS
 * =================================================================
 */
@layer utilities {
  .text-balance { text-wrap: balance; }
  .scrollbar-hidden::-webkit-scrollbar { display: none; }
  .scrollbar-hidden { scrollbar-width: none; -ms-overflow-style: none; }
  .line-clamp-2 { display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden; }
}

@keyframes blink { 50% { opacity: 0; } }
@keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }

/*
 * =================================================================
 * 4. COMPONENT-SPECIFIC CUSTOM STYLES (MUST BE LAST)
 * =================================================================
 */

/* --- Custom Cursor --- */
#cursor-circle {
  position: fixed; top: 0; left: 0; width: 24px; height: 24px;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.8);
  border-radius: 50%; pointer-events: none; mix-blend-mode: difference;
  transition: transform 0.3s cubic-bezier(0.25, 1, 0.5, 1), 
              width 0.3s cubic-bezier(0.25, 1, 0.5, 1),
              height 0.3s cubic-bezier(0.25, 1, 0.5, 1),
              background-color 0.2s ease, border-color 0.2s ease;
  transform: translate(-50%, -50%); z-index: 9999;
  display: flex; /* Added for centering text */
  align-items: center; /* Added for centering text */
  justify-content: center; /* Added for centering text */
}
/* This is the state when hovering over a non-link element that just enlarges the cursor */
#cursor-circle.enlarged {
  transform: translate(-50%, -50%) scale(1.5);
}

/* NEW: This is the state when hovering over a link */
#cursor-circle.link-hover {
  width: 80px;  /* Make it much bigger */
  height: 80px;
  background: rgba(255, 255, 255, 1); /* Make it solid */
  border-color: rgba(255, 255, 255, 1);
}

/* NEW: The text that will appear inside the cursor */
.cursor-text {
  font-family: monospace;
  font-size: 12px;
  font-weight: bold;
  color: black;
  opacity: 0; /* Hidden by default */
  transition: opacity 0.2s ease-in-out;
  text-transform: uppercase;
}
/* When the parent has .link-hover, the text becomes visible */
#cursor-circle.link-hover .cursor-text {
  opacity: 1;
}

/* --- FIX 3: Restore Default Cursor on Mobile --- */
/* Media query to detect devices that primarily use touch */
@media (pointer: coarse) {
  * {
    cursor: auto !important; /* Bring back the default cursor */
  }
  /* Hide our custom cursor element completely on these devices */
  #cursor-circle {
    display: none !important;
  }
}


/* app/globals.css */

/* ... (at the bottom of the file) ... */

/* --- NEW: Brutalist Project Page Styles --- */
.project-list-item {
  /* Underline effect for hover/active state */
  background-image: linear-gradient(to right, #000 0%, #000 100%);
  background-size: 0% 2px;
  background-position: 0% 100%;
  background-repeat: no-repeat;
  transition: background-size 0.3s cubic-bezier(0.25, 1, 0.5, 1);
}

.project-list-item:hover,
.project-list-item.selected {
  background-size: 100% 2px;
}


/* --- Research Section Styles --- */
.blueprint-card { position: relative; width: 100%; border: 2px solid #000; padding: 1.5rem 2rem; background: #e6f3ff; box-shadow: 6px 6px 0px #0a0a0a; transition: all 0.3s ease; color: #0a0a0a; }
.blueprint-card.vertical-layout:hover { transform: translate(-4px, -4px); box-shadow: 10px 10px 0px #0a0a0a; }
.blueprint-title { font-family: monospace; font-size: 1.5rem; font-weight: bold; border-bottom: 2px dotted #000; padding-bottom: 0.5rem; margin-bottom: 1rem; }
.blueprint-abstract { font-family: 'Times New Roman', serif; font-style: italic; }
.blueprint-annotations { position: absolute; inset: 0; pointer-events: none; }
.annotation-line { position: absolute; height: 1px; background-color: #0056b3; }
.annotation-text { position: absolute; font-family: monospace; font-size: 0.8rem; color: #0056b3; background: #e6f3ff; padding: 0 0.25rem; }

/* --- Personal Desk / Peek Section Styles --- */
.personal-note { border: 2px dashed #000; padding: 2rem; max-width: 600px; text-align: center; font-family: serif; font-size: 1.5rem; transform: rotate(-1deg); background: #fff; }
.portal-button { display: inline-block; font-family: monospace; font-size: 1.25rem; color: #fff; background: #000; padding: 1rem 2rem; border: 2px solid #000; box-shadow: 6px 6px 0px #888; transition: all 0.2s ease; }
.portal-button:hover { transform: translate(3px, 3px); box-shadow: 3px 3px 0px #888; }




/*
 * =================================================================
 * 5. MUSIC CHOICE SECTION STYLES
 * =================================================================
 */

.music-choice-container {
  --bg: #1a1a1a; /* Using a slightly lighter black for this section */
  --min-size: 200px;
  position: relative;
  height: 100vh; /* It occupies a full screen height */
  background: var(--bg);
  padding: 0;
  margin: 0;
  overflow: hidden; /* Important to contain the animation */
  color: #fff; /* Set default text color for this section */
}

.music-section-title {
  position: absolute;
  top: 5%;
  left: 50%;
  transform: translateX(-50%);
  font-family: monospace;
  font-size: 1.5rem;
  text-align: center;
  border: 1px solid #fff;
  padding: 0.5rem 1.5rem;
  z-index: 400;
  color: #fff;
}

.music-choice-container .drag-proxy {
  visibility: hidden;
  position: absolute;
}

.music-choice-container .controls {
  position: absolute;
  top: calc(50% + clamp(var(--min-size), 20vmin, 20vmin));
  left: 50%;
  transform: translate(-50%, -50%) scale(1.5);
  display: flex;
  justify-content: space-between;
  min-width: var(--min-size);
  height: 44px;
  width: 20vmin;
  z-index: 300;
}

.music-choice-container button {
  height: 48px;
  width: 48px;
  border-radius: 50%;
  position: absolute;
  top: 0%;
  outline: transparent;
  cursor: pointer;
  background: none;
  appearance: none;
  border: 0;
  transition: transform 0.1s;
  transform: translate(0, var(--y, 0));
}

.music-choice-container button:before {
  border: 2px solid hsl(0, 0%, 90%);
  background: linear-gradient(hsla(0, 0%, 80%, 0.65), hsl(0, 0%, 0%)) hsl(0, 0%, 0%);
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 80%;
  width: 80%;
  border-radius: 50%;
}

.music-choice-container button:active:before {
  background: linear-gradient(hsl(0, 0%, 0%), hsla(0, 0%, 80%, 0.65)) hsl(0, 0%, 0%);
}

.music-choice-container button.next {
  right: 100%;
}

.music-choice-container button.prev {
  left: 100%;
}

.music-choice-container button span {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.music-choice-container button:hover {
  --y: -5%;
}

.music-choice-container button svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(0deg) translate(2%, 0);
  height: 30%;
  fill: hsl(0, 0%, 90%);
}

.music-choice-container button.next svg {
  transform: translate(-50%, -50%) rotate(180deg) translate(2%, 0);
}
/* This is the new wrapper div from page.jsx */
.music-container {
  /* The height is 100vh (for the view) + 200vh (for the scroll) */
  height: 100vh;
  position: relative;
}

/* The <section> element is now positioned absolutely within its container */
/* This allows it to be pinned from the top of the container */
.music-choice-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  
  --bg: #1a1a1a;
  --min-size: 200px;
  background: var(--bg);
  padding: 0;
  margin: 0;
  overflow: hidden;
  color: #fff;
}
/* ... (the rest of the music choice CSS from before remains the same) ... */


.music-choice-container .boxes {
  height: 100vh;
  width: 100%;
  overflow: hidden;
  position: absolute;
  transform-style: preserve-3d;
  perspective: 800px;
  touch-action: none;
}

.music-choice-container .box {
  transform-style: preserve-3d;
  position: absolute;
  top: 50%;
  left: 50%;
  height: 20vmin;
  width: 20vmin;
  min-height: var(--min-size);
  min-width: var(--min-size);
  display: none; /* GSAP will set this to 'block' */
}

.music-choice-container .box img {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  object-fit: cover;
}

/* This creates the reflection effect */
@supports (-webkit-box-reflect: below) {
  .music-choice-container .box {
    -webkit-box-reflect: below 0.5vmin linear-gradient(transparent 40%, hsla(0, 0%, 100%, 0.5) 100%);
  }
}


/* app/globals.css */

/* ... (Keep your base styles and variables) ... */

/*
 * =================================================================
 * 5. CYBERPUNK TERMINAL STYLES
 * =================================================================
 */

@keyframes scanline {
  0% { transform: translateY(0); }
  100% { transform: translateY(-5px); }
}

@keyframes text-flicker {
  0% { opacity: 0.8; }
  5% { opacity: 0.5; }
  10% { opacity: 0.9; }
  /* ... more steps for random flicker ... */
  100% { opacity: 0.8; }
}

.terminal-container {
  background-color: #0d0d15; /* A deep, dark blue-black */
  color: #00ff41; /* Classic green terminal text */
  font-family: 'IBM Plex Mono', 'Courier New', monospace; /* A proper tech font */
  min-height: 100vh;
  padding: 1rem;
  overflow: hidden;
  position: relative;
  /* The throbbing grid background */
  background-image:
    linear-gradient(rgba(0, 255, 65, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 65, 0.1) 1px, transparent 1px);
  background-size: 2rem 2rem;
}

.scanline-overlay {
  position: fixed;
  top: 0; left: 0; width: 100%; height: 100%;
  pointer-events: none;
  background: linear-gradient(to bottom, rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%);
  background-size: 100% 4px;
  animation: scanline 0.2s linear infinite;
  z-index: 999;
}

.terminal-grid {
  display: grid;
  grid-template-columns: 300px 1fr; /* Fixed sidebar, flexible content */
  gap: 2rem;
  height: calc(100vh - 8rem); /* Adjust based on header/footer height */
  padding-top: 4rem;
  position: relative;
  z-index: 10;
}

.project-directory {
  border: 1px solid rgba(0, 255, 65, 0.3);
  padding: 1rem;
  backdrop-filter: blur(5px);
  background-color: rgba(13, 13, 21, 0.5);
  overflow-y: auto;
}

.directory-header {
  border-bottom: 1px solid rgba(0, 255, 65, 0.3);
  padding-bottom: 0.5rem;
  margin-bottom: 1rem;
  text-transform: uppercase;
}

.directory-item {
  list-style: none;
  padding: 0.5rem;
  cursor: pointer;
  transition: all 0.2s;
  position: relative;
}
.directory-item:hover {
  background-color: rgba(0, 255, 65, 0.2);
}
.directory-item.selected {
  background-color: #00ff41;
  color: #0d0d15;
}
.item-prefix {
  margin-right: 0.5rem;
  opacity: 0.5;
}

.display-panel {
  border: 1px solid rgba(0, 255, 65, 0.3);
  padding: 1.5rem;
  backdrop-filter: blur(5px);
  background-color: rgba(13, 13, 21, 0.5);
  overflow: hidden;
  position: relative; /* for AnimatePresence */
}

.display-content {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem;
  align-items: flex-start;
}

.image-crt-wrapper {
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(0, 255, 65, 0.1);
}
.image-crt-wrapper:after {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background: radial-gradient(ellipse at center, rgba(0,0,0,0) 0%, rgba(0,0,0,0.8) 100%);
  pointer-events: none;
}
.image-crt-wrapper img {
  width: 100%;
  height: auto;
  object-fit: cover;
  animation: text-flicker 0.1s infinite; /* Re-using flicker for image distortion */
  filter: saturate(0.8);
}

.data-stream {
  display: flex;
  flex-direction: column;
}
.data-title {
  font-size: 2.5rem;
  font-weight: 700;
  text-transform: uppercase;
  margin-bottom: 1rem;
  text-shadow: 0 0 5px #00ff41;
}
.data-description {
  min-height: 100px; /* Reserve space for text */
  line-height: 1.6;
}
.cursor-blink {
  animation: blink 1s step-end infinite;
}
.tech-stack {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 1.5rem;
  opacity: 0.7;
}
.data-link {
  margin-top: 2rem;
  border: 1px solid #00ff41;
  padding: 0.75rem 1rem;
  text-align: center;
  text-transform: uppercase;
  transition: all 0.2s;
}
.data-link:hover {
  background-color: #00ff41;
  color: #0d0d15;
}

/* --- Hero & Workbench Base --- */
.workbench-container {
  height: 500vh; /* Desktop: Provides scroll space for pin effect */
  position: relative;
}
.hero-bg-svg { transform: scale(1.1); }
.blinking-text { animation: blink 1.5s step-end infinite; }
.workbench-bg { background-color: #f0f0f0; background-image: url('/images/grid.jpg'); }
.workbench-track {
  display: flex;
  align-items: center;
  height: 90vh; /* Desktop: Height for horizontal content */
  width: 200vw; /* Desktop: Ensures horizontal scroll */
  position: relative;
}
.workbench-zone {
  position: relative;
  flex-shrink: 0;
  width: 100vw; /* Each zone takes 100% of viewport width */
  height: 100%;
}

/* --- Combined Zone (Timeline & Toolkit) --- */
.combined-zone { position: relative; display: block; }
.timeline-spine {
  position: absolute;
  top: 50%;
  left: 5%;
  width: 90%;
  height: 3px;
  background-color: #000;
  transform: translateY(-50%);
}
.timeline-item-center {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}
.timeline-connector {
  position: absolute;
  width: 3px;
  background-color: #000;
  left: 50%;
}
.timeline-connector.top { height: 60px; bottom: 0; }
.timeline-connector.bottom { height: 60px; top: 0; }
.timeline-content-center {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  width: 300px;
  padding: 1rem;
  background: #f0f0f0;
  border: 2px solid #000;
  font-family: monospace;
}
.timeline-content-center.top { bottom: 60px; }
.timeline-content-center.bottom { top: 60px; }
.toolkit-foundation {
  position: absolute;
  bottom: 5%;
  width: 100%;
  left: 0;
  text-align: center;
}
.toolkit-title { font-family: monospace; font-size: 1.5rem; margin-bottom: 2rem; display: inline-block; border: 2px solid #000; padding: 0.25rem 1rem; }
.toolkit-grid { display: flex; flex-wrap: wrap; justify-content: center; gap: 1rem; }
.skill-item { background: #fff; border: 2px solid #000; padding: 0.75rem 1.5rem; font-family: monospace; font-weight: bold; opacity: 0; animation: fadeIn 0.5s ease forwards; animation-delay: var(--delay); }

/* --- Redesigned Languages Zone Styles --- */
.languages-zone-redesigned { position: relative; }
.languages-title-absolute { position: absolute; top: 10%; left: 50%; transform: translateX(-50%); font-family: monospace; font-size: 2rem; text-align: center; border: 2px solid #000; padding: 0.5rem 1.5rem; background-color: #f0f0f0; z-index: 10; }
.language-card-scattered {
  position: absolute; /* Desktop: For scattered effect */
  display: flex;
  align-items: center;
  gap: 1.5rem;
  background: #fff;
  border: 2px solid #000;
  padding: 1.5rem;
  box-shadow: 6px 6px 0px #0a0a0a;
  width: 300px;
  transition: all 0.2s ease-in-out;
}
.language-card-scattered:hover { transform: translate(-4px, -4px) scale(1.05); box-shadow: 10px 10px 0px #0a0a0a; z-index: 20; }
.language-icon { font-size: 2.5rem; }
.language-details { display: flex; flex-direction: column; }
.language-name { font-family: monospace; font-size: 1.5rem; font-weight: bold; }
.language-level { font-family: monospace; color: #555; }


/* --- Research Section Styles --- */
/* Existing desktop/default styles for Research Section */
.blueprint-card { position: relative; width: 100%; border: 2px solid #000; padding: 1.5rem 2rem; background: #e6f3ff; box-shadow: 6px 6px 0px #0a0a0a; transition: all 0.3s ease; color: #0a0a0a; }
.blueprint-card.vertical-layout:hover { transform: translate(-4px, -4px); box-shadow: 10px 10px 0px #0a0a0a; }
.blueprint-title { font-family: monospace; font-size: 1.5rem; font-weight: bold; border-bottom: 2px dotted #000; padding-bottom: 0.5rem; margin-bottom: 1rem; }
.blueprint-abstract { font-family: 'Times New Roman', serif; font-style: italic; }
.blueprint-annotations { position: absolute; inset: 0; pointer-events: none; }
.annotation-line { position: absolute; height: 1px; background-color: #0056b3; }
.annotation-text { position: absolute; font-family: monospace; font-size: 0.8rem; color: #0056b3; background: #e6f3ff; padding: 0 0.25rem; }


/*
 * =================================================================
 * RESPONSIVE WORKBENCH & RESEARCH STYLES (FOR MOBILE & TABLET)
 * =================================================================
 */
@media (max-width: 768px) {
  /* General container and section adjustments */
  .workbench-container { /* This class is on the parent div in page.jsx */
    height: auto !important; /* Allow content to define height */
    position: relative !important; /* Ensure it's not pinned or positioned strangely */
    overflow: visible !important; /* Prevent content from being clipped */
  }

  /* Target the section element within the container */
  .workbench-container section {
    height: auto !important; /* Override h-screen */
    overflow: visible !important; /* Override overflow-hidden */
    position: relative !important; /* Ensure it behaves normally */
    padding-top: 2rem; /* Add some overall top padding */
    padding-bottom: 2rem; /* Add some overall bottom padding */
  }

  /* Content wrapper (contentWrapperRef): Ensure it's visible and flows naturally */
  .workbench-container section > div.workbench-bg { /* Targets the contentWrapperRef div */
    visibility: visible !important; /* Make sure content is visible */
    opacity: 1 !important; /* Ensure content is not transparent */
    height: auto !important; /* Let content dictate height */
    align-items: flex-start !important; /* Align content to start, not center vertically */
    flex-direction: column; /* Ensure it stacks vertically */
    padding: 0 1rem; /* Add horizontal padding to the main content area */
  }

  /* Workbench track (workbenchRef): Change to vertical flow */
  .workbench-track {
    flex-direction: column;
    width: 100vw;
    height: auto;
    padding: 0; /* Remove horizontal track padding as zones will have it */
    transform: translateX(0) !important; /* CRUCIAL: Reset GSAP's x transform */
    display: flex; /* Ensure it's a flex container for column layout */
    justify-content: center; /* Center content horizontally within the track */
    align-items: center; /* Center content horizontally within the track */
  }

  /* Each workbench zone: Stack vertically with proper spacing */
  .workbench-zone {
    position: relative !important; /* Ensure it respects normal flow, overriding absolute */
    width: 100%;
    max-width: 600px; /* Limit overall width for readability on larger mobiles */
    height: auto;
    padding: 0; /* Remove zone padding, content elements will have their own */
    margin-bottom: 4rem; /* More space between major zones (timeline, languages) */
    display: flex; /* Make zones flex containers */
    flex-direction: column; /* Stack content within zones */
    align-items: center; /* Center content within zones */
    background-color: transparent !important; /* Ensure background is handled by main section */
  }
  /* Remove margin from the last zone to avoid extra space at the bottom */
  .workbench-zone:last-of-type {
    margin-bottom: 0 !important;
  }

  /* Timeline and Toolkit within .combined-zone */
  .combined-zone {
    gap: 3rem; /* Space between timeline items and toolkit section */
    width: 100%; /* Ensure combined zone takes full width for centering */
    position: relative; /* Context for absolute spine */
    padding-left: 20px; /* Provide space on the left for the vertical spine */
  }

  /* Vertical Timeline Spine */
  .timeline-spine {
    display: block !important; /* Make spine visible */
    position: absolute !important;
    left: 20px !important; /* Position it on the left side, aligned with padding */
    top: 0 !important;
    height: 100% !important; /* Span full height of combined-zone */
    width: 3px !important;
    background-color: #000 !important;
    transform: none !important; /* Reset any desktop transforms */
  }

  /* Individual Timeline Items */
  .timeline-item-center {
    position: relative !important; /* Keep relative for positioning its children/pseudo-elements */
    top: auto !important;
    left: auto !important;
    transform: none !important;
    width: 100% !important; /* Takes full width */
    max-width: none !important; /* Remove max-width constraint */
    margin-bottom: 2rem !important; /* Space between items */
    display: flex; /* Use flexbox to align connector and content */
    align-items: center; /* Vertically align items */
    justify-content: flex-start; /* Align content to the left */
    padding-left: 30px; /* Add internal padding to make space for the connector and dot */
  }
  /* Last item has no bottom margin */
  .timeline-item-center:last-of-type {
    margin-bottom: 0 !important;
  }
  
  /* Add a dot on the spine for each timeline item */
  .timeline-item-center::before {
    content: '';
    position: absolute;
    left: 17px; /* Position relative to the spine (20px left of parent + 3px width / 2) - Adjust as needed */
    width: 10px;
    height: 10px;
    background-color: #000;
    border-radius: 50%;
    z-index: 3; /* Ensure it's above the spine */
    transform: translateY(-50%); /* Center it vertically */
    top: 50%;
  }

  /* Connectors from spine to content */
  .timeline-connector {
    display: block !important; /* Make connector visible */
    position: absolute !important;
    left: 20px !important; /* Start from spine's position */
    top: 50% !important; /* Center vertically within the item */
    transform: translateY(-50%) !important; /* Ensure vertical centering */
    width: 20px !important; /* Horizontal length of connector */
    height: 2px !important; /* Thickness of connector */
    background-color: #000 !important;
  }
  /* Remove top/bottom specific styles for mobile connectors as they are all horizontal */
  .timeline-connector.top,
  .timeline-connector.bottom {
    top: 50% !important;
    bottom: auto !important;
    height: 2px !important; /* Standardize height for horizontal line */
  }

  /* Content cards */
  .timeline-content-center,
  .timeline-content-center.top,
  .timeline-content-center.bottom {
    position: relative !important; /* Overwrite absolute positioning */
    top: auto !important;
    bottom: auto !important;
    left: auto !important;
    transform: none !important; /* Overwrite transforms */
    width: auto !important; /* Content width adjusts automatically */
    max-width: calc(100% - 50px) !important; /* Max width to leave space for spine/connector/dot */
    padding: 1rem !important;
    box-sizing: border-box;
    margin-left: 20px; /* Space between connector end and card start */
    text-align: left; /* Align text within card to the left */
  }

  /* Toolkit foundation (toolkit-title and toolkit-grid) */
  .toolkit-foundation {
    position: relative !important;
    bottom: auto !important;
    width: 100%;
    left: auto !important;
    text-align: center;
    margin-top: 4rem !important; /* CRUCIAL: Push toolkit down from timeline items */
    padding: 0 1rem; /* Add internal padding for consistency */
    box-sizing: border-box;
  }
  .toolkit-title {
    font-size: 1.2rem;
    margin-bottom: 1.5rem;
  }
  .toolkit-grid {
    gap: 0.75rem;
    justify-content: center;
  }
  .skill-item {
    opacity: 1 !important;
    animation: none !important;
    padding: 0.6rem 1.2rem;
    font-size: 0.85rem;
  }

  /* Redesigned Languages Zone Styles */
  .languages-zone-redesigned {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    margin-top: 4rem !important; /* CRUCIAL: Add significant space from the previous section (Toolkit) */
    width: 100%;
  }
  
  .languages-title-absolute {
    position: relative !important;
    top: auto !important;
    left: auto !important;
    transform: none !important;
    font-size: 1.5rem;
    margin-bottom: 2.5rem !important;
  }
  
  /* Language cards: Reset positioning and transform for vertical stacking */
  .language-card-scattered {
    position: relative !important;
    top: auto !important;
    left: auto !important;
    transform: none !important;
    width: 90%;
    max-width: 400px;
    margin: 0 auto !important;
    box-shadow: 4px 4px 0px #0a0a0a !important;
  }
  .language-card-scattered:hover {
    transform: none !important;
    box-shadow: 4px 4px 0px #0a0a0a !important;
  }


  /*
   * =================================================================
   * RESPONSIVE RESEARCH SECTION STYLES (FOR MOBILE & TABLET)
   * =================================================================
   */

  /* Research Section base padding already seems okay */

  /* Blueprint Card - Ensure it's the positioning context for relative children */
  .blueprint-card {
      position: relative !important; /* Already set for desktop, but good to ensure */
      padding: 1rem !important; /* Slightly less padding on mobile */
      box-shadow: 4px 4px 0px #0a0a0a !important; /* Adjusted shadow */
  }

  /* Blueprint Annotations Wrapper */
  .blueprint-annotations {
      position: relative !important; /* Make it part of the normal flow */
      inset: auto !important; /* Remove absolute positioning offsets (top, right, bottom, left) */
      pointer-events: none; /* Keep pointer events disabled if they are purely decorative */
      display: flex; /* Use flexbox to arrange annotations */
      flex-direction: column; /* Stack annotations vertically */
      gap: 0.5rem; /* Space between annotations */
      margin-top: 1rem; /* Add space above annotations, below abstract */
      width: 100% !important; /* Take full width of the card */
  }

  /* Individual Annotation Line */
  .annotation-line {
      position: relative !important; /* Make it part of the normal flow */
      width: 50px !important; /* Fixed small width for a simple visual marker */
      height: 1px !important;
      background-color: #0056b3 !important;
      top: auto !important; /* Remove absolute positioning */
      left: auto !important;
      align-self: flex-start; /* Align line to the start of the flex container */
      margin-right: 0.5rem; /* Space between line and text if they were inline (they are stacked now, but useful if layout changes) */
  }

  /* Individual Annotation Text */
  .annotation-text {
      position: relative !important; /* Make it part of the normal flow */
      font-size: 0.7rem !important; /* Smaller font size */
      top: auto !important; /* Remove absolute positioning */
      left: auto !important;
      transform: none !important; /* Remove any transforms */
      background: none !important; /* Remove background so it's just text */
      padding: 0 !important; /* Remove padding */
      color: #0056b3 !important; /* Ensure color */
      width: 100% !important; /* Allow text to take full width */
      text-align: left !important; /* Align text to the left */
      display: block !important; /* Ensure it's a block element */
      margin: 0 !important; /* Remove any default margins */
  }
}.glass-section { background: rgba(0, 0, 0, 0.25); backdrop-filter: blur(10px); border-radius: 1rem; padding: 2rem; margin-bottom: 2rem; border: 1px solid rgba(255, 255, 255, 0.1); } 
